
# Initialize the Kubernetes cluster with kubeadm using the below code (applicable only on master node).


- name: Check if node already initialized 
  become_user: vagrant
  shell: "kubectl cluster-info"
  register: cluster_exists
  ignore_errors: true

- name: Initialize the Kubernetes cluster using kubeadm
  command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=172.43.0.0/16
  when: cluster_exists.rc != 0


# Setup the kube config file for the vagrant user to access the Kubernetes cluster using the below code.

- name: Create .kube dir
  file:
    path: /home/vagrant/.kube
    state: directory
    owner: vagrant
    group: vagrant    

- name: Setup kubeconfig for vagrant user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    owner: vagrant
    group: vagrant
    remote_src: yes

- name: Copy admin.conf to local file
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /vagrant/kubernetes-setup/admin.conf
    remote_src: yes   

# Setup the container networking provider and the network policy engine using the below code.

- name: Install calico pod network
  become: false
  command: kubectl apply -f /vagrant/kubernetes-setup/calico.yaml

# Generate kube join command for joining the node to the Kubernetes cluster and store the command in the file named join-command.

- name: Generate join command
  become_user: vagrant
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
  copy:
    content: "{{ join_command.stdout_lines[0] }}" 
    dest: "/vagrant/kubernetes-setup/join-command"


- name: Install etcdctl client
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - etcd-client