#  Install Docker and its dependent components.
- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Install containerd
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - containerd.io=1.6.16-1
  notify:
    - containerd status

- name: Copy containerd config.toml
  template:
    src: containerd_config_toml.j2
    dest: /etc/containerd/config.toml
  notify:
    - containerd reload

# Kubelet will not start if the system has swap enabled, so we are disabling swap using the below code.

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

# Installing kubelet, kubeadm and kubectl using the below code.

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet=1.25.6-00
      - kubeadm=1.25.6-00
      - kubectl=1.25.6-00

- name: Configure node ip
  lineinfile:
    path: /etc/default/kubelet
    line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
    create: yes
  notify:
    - kubelet reload

- name: Add the br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

# Set ip forwarding on in /proc and in the sysctl file and reload if necessary
- name: Set ip forwarding on in /proc and in the sysctl file 
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    reload: yes
    sysctl_set: yes

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers
